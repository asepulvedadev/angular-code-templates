{
  "agents": [
    {
      "name": "angular-component-generator",
      "path": "angular/angular-component-generator.md",
      "category": "angular",
      "type": "agent",
      "content": "---\r\nname: angular-component-generator\r\ndescription: Usa este agente cuando necesites generar componentes Angular. Se especializa en crear componentes reutilizables, optimizados y siguiendo las mejores prácticas de Angular. Ejemplos: <example>Contexto: Necesito crear un componente de formulario de login usuario: 'Crea un componente de login con validación' asistente: 'Generaré un componente de login completo con ReactiveFormsModule, validaciones y estilos' <commentary>El agente identifica la necesidad de un componente específico y genera código completo</commentary></example>\r\ncolor: blue\r\n---\r\n\r\n# Angular Component Generator\r\n\r\nSoy un especialista en la creación de componentes Angular. Me enfoco en generar componentes reutilizables, optimizados y que sigan las mejores prácticas del framework.\r\n\r\n## Capacidades principales:\r\n\r\n### 1. **Generación de Componentes Básicos**\r\n- Componentes funcionales con TypeScript\r\n- Templates optimizados con Angular directives\r\n- Estilos encapsulados con ViewEncapsulation\r\n\r\n### 2. **Componentes Avanzados**\r\n- Componentes con formularios reactivos\r\n- Componentes con manejo de estado\r\n- Componentes con comunicación padre-hijo\r\n- Componentes con servicios inyectados\r\n\r\n### 3. **Mejores Prácticas**\r\n- Uso correcto de lifecycle hooks\r\n- Implementación de OnPush change detection\r\n- Optimización de performance\r\n- Accesibilidad (ARIA labels, roles)\r\n\r\n### 4. **Integración con Angular CLI**\r\n- Generación de archivos .ts, .html, .css, .spec.ts\r\n- Configuración correcta de módulos\r\n- Imports y exports apropiados\r\n\r\n## Ejemplos de uso:\r\n\r\n**Componente simple:**\r\n```\r\nng generate component user-profile --skip-tests\r\n```\r\n\r\n**Componente con formulario:**\r\n```\r\nng generate component login-form --skip-tests\r\n```\r\n\r\n**Componente avanzado:**\r\n```\r\nng generate component data-table --skip-tests\r\n```\r\n\r\nSiempre genero código que es:\r\n- ✅ TypeScript tipado correctamente\r\n- ✅ Seguir convenciones de Angular\r\n- ✅ Optimizado para performance\r\n- ✅ Fácil de mantener y extender\r\n- ✅ Compatible con Angular 12+",
      "description": "",
      "downloads": 0
    },
    {
      "name": "angular-performance-optimizer",
      "path": "angular/angular-performance-optimizer.md",
      "category": "angular",
      "type": "agent",
      "content": "---\r\nname: angular-performance-optimizer\r\ndescription: Usa este agente cuando necesites optimizar el rendimiento de aplicaciones Angular. Se especializa en lazy loading, change detection, bundle optimization y técnicas avanzadas de performance. Ejemplos: <example>Contexto: La aplicación Angular es lenta usuario: 'Optimiza el rendimiento de mi app' asistente: 'Implementaré lazy loading, OnPush change detection y optimizaciones de bundle' <commentary>El agente identifica cuellos de botella y aplica optimizaciones específicas</commentary></example>\r\ncolor: orange\r\n---\r\n\r\n# Angular Performance Optimizer\r\n\r\nSoy un especialista en optimización de rendimiento para aplicaciones Angular. Me enfoco en identificar y resolver cuellos de botella de performance usando técnicas avanzadas del framework.\r\n\r\n## Capacidades principales:\r\n\r\n### 1. **Lazy Loading y Code Splitting**\r\n- Configuración de rutas lazy-loaded\r\n- Dynamic imports para componentes\r\n- Preloading strategies personalizadas\r\n- Bundle splitting inteligente\r\n\r\n### 2. **Change Detection Optimization**\r\n- Implementación de OnPush strategy\r\n- Uso de trackBy functions en *ngFor\r\n- Detach/reattach manual de change detection\r\n- Immutable updates con spread operator\r\n\r\n### 3. **Bundle Optimization**\r\n- Tree shaking efectivo\r\n- Análisis de bundle con webpack-bundle-analyzer\r\n- Eliminación de código muerto\r\n- Optimización de vendor chunks\r\n\r\n### 4. **Runtime Performance**\r\n- Virtual scrolling para listas grandes\r\n- Debounce/throttle en búsquedas\r\n- Memoización de funciones puras\r\n- Web Workers para tareas pesadas\r\n\r\n### 5. **Memory Management**\r\n- Detección y corrección de memory leaks\r\n- Unsubscribe automático de observables\r\n- Cleanup en ngOnDestroy\r\n- WeakMap para caché eficiente\r\n\r\n## Técnicas de optimización comunes:\r\n\r\n**Lazy Loading de rutas:**\r\n```typescript\r\nconst routes: Routes = [\r\n  {\r\n    path: 'dashboard',\r\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\r\n  }\r\n];\r\n```\r\n\r\n**OnPush Change Detection:**\r\n```typescript\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OptimizedComponent {\r\n  // Lógica optimizada\r\n}\r\n```\r\n\r\n**TrackBy Function:**\r\n```typescript\r\ntrackByFn(index: number, item: any): any {\r\n  return item.id; // Usar identificador único\r\n}\r\n```\r\n\r\nSiempre aplico optimizaciones que:\r\n- ✅ Reducen el tiempo de carga inicial\r\n- ✅ Mejoran la responsiveness de la UI\r\n- ✅ Disminuyen el uso de memoria\r\n- ✅ Optimizan el Core Web Vitals\r\n- ✅ Mantienen la funcionalidad intacta",
      "description": "",
      "downloads": 0
    },
    {
      "name": "angular-service-generator",
      "path": "angular/angular-service-generator.md",
      "category": "angular",
      "type": "agent",
      "content": "---\r\nname: angular-service-generator\r\ndescription: Usa este agente cuando necesites crear servicios Angular para manejo de datos, APIs y lógica de negocio. Se especializa en servicios inyectables con RxJS, HttpClient y patrones de diseño. Ejemplos: <example>Contexto: Necesito consumir una API REST usuario: 'Crea un servicio para gestionar usuarios' asistente: 'Generaré un servicio UserService con métodos CRUD usando HttpClient y RxJS' <commentary>El agente crea servicios completos con manejo de errores y observables</commentary></example>\r\ncolor: green\r\n---\r\n\r\n# Angular Service Generator\r\n\r\nSoy un especialista en la creación de servicios Angular. Me enfoco en generar servicios inyectables que manejen la lógica de negocio, comunicación con APIs y gestión de estado.\r\n\r\n## Capacidades principales:\r\n\r\n### 1. **Servicios HTTP**\r\n- Integración con HttpClient\r\n- Manejo de headers y autenticación\r\n- Interceptores personalizados\r\n- Retry logic y manejo de errores\r\n\r\n### 2. **Servicios de Datos**\r\n- CRUD operations completas\r\n- Caché de datos local\r\n- Sincronización offline/online\r\n- Manejo de estado con BehaviorSubject\r\n\r\n### 3. **Servicios Utilitarios**\r\n- Validación de datos\r\n- Formateo y transformación\r\n- Logging y debugging\r\n- Configuración global\r\n\r\n### 4. **Patrones de Diseño**\r\n- Singleton pattern (providedIn: 'root')\r\n- Observable pattern con RxJS\r\n- Repository pattern\r\n- Factory pattern\r\n\r\n## Ejemplos de uso:\r\n\r\n**Servicio de API:**\r\n```typescript\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>('/api/users');\r\n  }\r\n}\r\n```\r\n\r\n**Servicio de autenticación:**\r\n```typescript\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n\r\n  login(credentials: LoginCredentials): Observable<User> {\r\n    return this.http.post<User>('/api/auth/login', credentials)\r\n      .pipe(tap(user => this.currentUserSubject.next(user)));\r\n  }\r\n}\r\n```\r\n\r\nSiempre genero servicios que son:\r\n- ✅ Inyectables correctamente\r\n- ✅ Usan RxJS para operaciones asíncronas\r\n- ✅ Incluyen manejo de errores robusto\r\n- ✅ Siguen principios SOLID\r\n- ✅ Son testeables y mantenibles",
      "description": "",
      "downloads": 0
    }
  ],
  "commands": [],
  "mcps": [
    {
      "name": "browser-use-mcp-server",
      "path": "browser_automation/browser-use-mcp-server.json",
      "category": "browser_automation",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"browser-server\": {\r\n      \"description\": \"An MCP server that enables AI agents to control web browsers using browser-use.\",\r\n      \"command\": \"browser-use-mcp-server\",\r\n      \"args\": [\r\n        \"run\",\r\n        \"server\",\r\n        \"--port\",\r\n        \"8000\",\r\n        \"--stdio\",\r\n        \"--proxy-port\",\r\n        \"9000\"\r\n      ],\r\n      \"env\": {\r\n        \"OPENAI_API_KEY\": \"your-api-key\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "An MCP server that enables AI agents to control web browsers using browser-use.",
      "downloads": 0
    },
    {
      "name": "browsermcp",
      "path": "browser_automation/browsermcp.json",
      "category": "browser_automation",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"browsermcp\": {\r\n      \"description\": \"With Browser MCP, you can use MCP to automate your browser so that AI applications can navigate the web, fill out forms, and more.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"@browsermcp/mcp@latest\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "With Browser MCP, you can use MCP to automate your browser so that AI applications can navigate the web, fill out forms, and more.",
      "downloads": 0
    },
    {
      "name": "mcp-server-browserbase",
      "path": "browser_automation/mcp-server-browserbase.json",
      "category": "browser_automation",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"browserbase\": {\r\n      \"description\": \"This server provides cloud browser automation capabilities using Browserbase and Stagehand. It enables LLMs to interact with web pages, take screenshots, extract information, and perform automated actions with atomic precision.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"@browserbasehq/mcp-server-browserbase\"],\r\n      \"env\": {\r\n        \"BROWSERBASE_API_KEY\": \"\",\r\n        \"BROWSERBASE_PROJECT_ID\": \"\",\r\n        \"GEMINI_API_KEY\": \"\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "This server provides cloud browser automation capabilities using Browserbase and Stagehand. It enables LLMs to interact with web pages, take screenshots, extract information, and perform automated actions with atomic precision.",
      "downloads": 0
    },
    {
      "name": "mcp-server-playwright",
      "path": "browser_automation/mcp-server-playwright.json",
      "category": "browser_automation",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"automatalabs-playwright-server\": {\r\n      \"description\": \"A Model Context Protocol server that provides browser automation capabilities using Playwright\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@automatalabs/mcp-server-playwright\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "A Model Context Protocol server that provides browser automation capabilities using Playwright",
      "downloads": 0
    },
    {
      "name": "playwright-mcp-server",
      "path": "browser_automation/playwright-mcp-server.json",
      "category": "browser_automation",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"executeautomation-playwright-server\": {\r\n      \"description\": \"A Model Context Protocol server that provides browser automation capabilities using Playwright. This server enables LLMs to interact with web pages, take screenshots, generate test code, web scraps the page and execute JavaScript in a real browser environment.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@executeautomation/playwright-mcp-server\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "A Model Context Protocol server that provides browser automation capabilities using Playwright. This server enables LLMs to interact with web pages, take screenshots, generate test code, web scraps the page and execute JavaScript in a real browser environment.",
      "downloads": 0
    },
    {
      "name": "playwright-mcp",
      "path": "browser_automation/playwright-mcp.json",
      "category": "browser_automation",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"playwright-server\": {\r\n      \"description\": \"A Model Context Protocol (MCP) server that provides browser automation capabilities using Playwright. This server enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"@playwright/mcp@latest\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "A Model Context Protocol (MCP) server that provides browser automation capabilities using Playwright. This server enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models.",
      "downloads": 0
    },
    {
      "name": "mysql-integration",
      "path": "database/mysql-integration.json",
      "category": "database",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"mysql\": {\r\n      \"description\": \"Connect to MySQL databases for direct data access, queries, and database management within Claude Code workflows.\",\r\n      \"command\": \"uvx\",\r\n      \"args\": [\"mcp-server-mysql\"],\r\n      \"env\": {\r\n        \"MYSQL_CONNECTION_STRING\": \"mysql://user:password@localhost:3306/dbname\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "Connect to MySQL databases for direct data access, queries, and database management within Claude Code workflows.",
      "downloads": 0
    },
    {
      "name": "neon",
      "path": "database/neon.json",
      "category": "database",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"Neon\": {\r\n      \"description\":\"MCP server for interacting with Neon Management API and databases\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"mcp-remote\", \"https://mcp.neon.tech/mcp\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "MCP server for interacting with Neon Management API and databases",
      "downloads": 0
    },
    {
      "name": "postgresql-integration",
      "path": "database/postgresql-integration.json",
      "category": "database",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"postgresql\": {\r\n      \"description\": \"Connect to PostgreSQL databases for advanced data operations, complex queries, and enterprise database management.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@modelcontextprotocol/server-postgres\"],\r\n      \"env\": {\r\n        \"POSTGRES_CONNECTION_STRING\": \"postgresql://user:password@localhost:5432/dbname\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "Connect to PostgreSQL databases for advanced data operations, complex queries, and enterprise database management.",
      "downloads": 0
    },
    {
      "name": "supabase",
      "path": "database/supabase.json",
      "category": "database",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"supabase\": {\r\n      \"description\": \"Connect your Claude Code to Supabase using MCP\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\",\r\n        \"@supabase/mcp-server-supabase@latest\",\r\n        \"--read-only\",\r\n        \"--project-ref=<project-ref>\"\r\n      ],\r\n      \"env\": {\r\n        \"SUPABASE_ACCESS_TOKEN\": \"<personal-access-token>\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "Connect your Claude Code to Supabase using MCP",
      "downloads": 0
    },
    {
      "name": "deepgraph-nextjs",
      "path": "deepgraph/deepgraph-nextjs.json",
      "category": "deepgraph",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"DeepGraph Next.js MCP\": {\r\n      \"description\": \"Deep code analysis and visualization for Next.js projects. Understand component relationships, dependencies, and architecture patterns.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\",\r\n        \"mcp-code-graph@latest\",\r\n        \"vercel/next.js\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Deep code analysis and visualization for Next.js projects. Understand component relationships, dependencies, and architecture patterns.",
      "downloads": 0
    },
    {
      "name": "deepgraph-react",
      "path": "deepgraph/deepgraph-react.json",
      "category": "deepgraph",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"DeepGraph React MCP\": {\r\n      \"description\": \"Analyze React component hierarchies, state flows, and dependencies. Visualize your React application architecture.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\",\r\n        \"mcp-code-graph@latest\",\r\n        \"facebook/react\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Analyze React component hierarchies, state flows, and dependencies. Visualize your React application architecture.",
      "downloads": 0
    },
    {
      "name": "deepgraph-typescript",
      "path": "deepgraph/deepgraph-typescript.json",
      "category": "deepgraph",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"DeepGraph TypeScript MCP\": {\r\n      \"description\": \"Comprehensive TypeScript code analysis with type mapping, interface relationships, and module dependency tracking.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\",\r\n        \"mcp-code-graph@latest\",\r\n        \"microsoft/TypeScript\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Comprehensive TypeScript code analysis with type mapping, interface relationships, and module dependency tracking.",
      "downloads": 0
    },
    {
      "name": "deepgraph-vue",
      "path": "deepgraph/deepgraph-vue.json",
      "category": "deepgraph",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"DeepGraph Vue MCP\": {\r\n      \"description\": \"Analyze Vue.js applications including component composition, reactive data flow, and template-script relationships.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\",\r\n        \"mcp-code-graph@latest\",\r\n        \"vuejs/core\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Analyze Vue.js applications including component composition, reactive data flow, and template-script relationships.",
      "downloads": 0
    },
    {
      "name": "azure-kubernetes-service",
      "path": "devtools/azure-kubernetes-service.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"aks\": {\r\n      \"description\":\"The AKS-MCP is a Model Context Protocol (MCP) server that enables AI assistants to interact with Azure Kubernetes Service (AKS) clusters. It serves as a bridge between AI tools (like GitHub Copilot, Claude, and other MCP-compatible AI assistants) and AKS, translating natural language requests into AKS operations and returning the results in a format the AI tools can understand.\",\r\n      \"command\": \"<path of binary aks-mcp>\",\r\n      \"args\": [\r\n        \"--transport\", \"stdio\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "The AKS-MCP is a Model Context Protocol (MCP) server that enables AI assistants to interact with Azure Kubernetes Service (AKS) clusters. It serves as a bridge between AI tools (like GitHub Copilot, Claude, and other MCP-compatible AI assistants) and AKS, translating natural language requests into AKS operations and returning the results in a format the AI tools can understand.",
      "downloads": 0
    },
    {
      "name": "box",
      "path": "devtools/box.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n    \"mcpServers\": {\r\n        \"mcp-server-box\": {\r\n            \"description\":\"The Box MCP Server is a Python project that integrates with the Box API to perform various operations such as file search, text extraction, AI-based querying, and data extraction. It leverages the box-sdk-gen library and provides a set of tools to interact with Box files and folders.\",\r\n            \"command\": \"uv\",\r\n            \"args\": [\r\n                \"--directory\",\r\n                \"/path/to/mcp-server-box\",\r\n                \"run\",\r\n                \"src/mcp_server_box.py\"\r\n            ]\r\n        }\r\n    }\r\n}\r\n",
      "description": "The Box MCP Server is a Python project that integrates with the Box API to perform various operations such as file search, text extraction, AI-based querying, and data extraction. It leverages the box-sdk-gen library and provides a set of tools to interact with Box files and folders.",
      "downloads": 0
    },
    {
      "name": "chrome-devtools",
      "path": "devtools/chrome-devtools.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"chrome-devtools\": {\r\n      \"description\": \"A Model Context Protocol server for interacting with Chrome DevTools, enabling browser automation, debugging, and performance analysis capabilities.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"chrome-devtools-mcp@latest\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "A Model Context Protocol server for interacting with Chrome DevTools, enabling browser automation, debugging, and performance analysis capabilities.",
      "downloads": 0
    },
    {
      "name": "circleci",
      "path": "devtools/circleci.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"circleci-mcp-server\": {\r\n      \"description\": \"Integrate CircleCI build and deployment pipeline management with your Claude Code workflow. Monitor builds, trigger deployments, and access project insights.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@circleci/mcp-server-circleci\"],\r\n      \"env\": {\r\n        \"CIRCLECI_TOKEN\": \"your-circleci-token\",\r\n        \"CIRCLECI_BASE_URL\": \"https://circleci.com\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "Integrate CircleCI build and deployment pipeline management with your Claude Code workflow. Monitor builds, trigger deployments, and access project insights.",
      "downloads": 0
    },
    {
      "name": "codacy",
      "path": "devtools/codacy.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"codacy\": {\r\n      \"description\":\"MCP Server for the Codacy API, enabling access to repositories, files, quality, coverage, security and more.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@codacy/codacy-mcp\"],\r\n      \"env\": {\r\n        \"CODACY_ACCOUNT_TOKEN\": \"<YOUR_TOKEN>\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "MCP Server for the Codacy API, enabling access to repositories, files, quality, coverage, security and more.",
      "downloads": 0
    },
    {
      "name": "context7",
      "path": "devtools/context7.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"context7\": {\r\n      \"description\": \"Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source — and places them directly into your prompt.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@upstash/context7-mcp\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source — and places them directly into your prompt.",
      "downloads": 0
    },
    {
      "name": "dynatrace",
      "path": "devtools/dynatrace.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"dynatrace-mcp-server\": {\r\n      \"description\":\"Manage and interact with the Dynatrace Platform for real-time observability and monitoring.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@dynatrace-oss/dynatrace-mcp-server@latest\"],\r\n      \"env\": {\r\n        \"DT_PLATFORM_TOKEN\": \"\",\r\n        \"DT_ENVIRONMENT\": \"\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "Manage and interact with the Dynatrace Platform for real-time observability and monitoring.",
      "downloads": 0
    },
    {
      "name": "elasticsearch",
      "path": "devtools/elasticsearch.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n \"mcpServers\": {\r\n   \"elasticsearch-mcp-server\": {\r\n    \"description\":\"MCP server for connecting to Elasticsearch data and indices. Supports search queries, mappings, ES|QL, and shard information through natural language interactions.\",\r\n    \"command\": \"docker\",\r\n    \"args\": [\r\n     \"run\", \"-i\", \"--rm\",\r\n     \"-e\", \"ES_URL\", \"-e\", \"ES_API_KEY\",\r\n     \"docker.elastic.co/mcp/elasticsearch\",\r\n     \"stdio\"\r\n    ],\r\n    \"env\": {\r\n      \"ES_URL\": \"<elasticsearch-cluster-url>\",\r\n      \"ES_API_KEY\": \"<elasticsearch-API-key>\"\r\n    }\r\n   }\r\n }\r\n}\r\n",
      "description": "MCP server for connecting to Elasticsearch data and indices. Supports search queries, mappings, ES|QL, and shard information through natural language interactions.",
      "downloads": 0
    },
    {
      "name": "figma-dev-mode",
      "path": "devtools/figma-dev-mode.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n    \"mcpServers\": {\r\n        \"Figma Dev Mode MCP\": {\r\n            \"description\":\"The Dev Mode MCP server brings Figma directly into your workflow by providing important design information and context to AI agents generating code from Figma design files.\",\r\n            \"url\": \"http://127.0.0.1:3845/mcp\"\r\n        }\r\n    }\r\n}\r\n",
      "description": "The Dev Mode MCP server brings Figma directly into your workflow by providing important design information and context to AI agents generating code from Figma design files.",
      "downloads": 0
    },
    {
      "name": "firecrawl",
      "path": "devtools/firecrawl.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"firecrawl-mcp\": {\r\n      \"description\": \"A Model Context Protocol (MCP) server implementation that integrates with Firecrawl for web scraping capabilities.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"firecrawl-mcp\"],\r\n      \"env\": {\r\n        \"FIRECRAWL_API_KEY\": \"YOUR-API-KEY\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "A Model Context Protocol (MCP) server implementation that integrates with Firecrawl for web scraping capabilities.",
      "downloads": 0
    },
    {
      "name": "firefly-mcp",
      "path": "devtools/firefly-mcp.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"firefly\": {\r\n      \"description\": \"Connect to Firefly AI services for advanced AI-powered development assistance, code analysis, and intelligent suggestions directly in your Claude Code environment.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@fireflyai/firefly-mcp\"],\r\n      \"env\": {\r\n        \"FIREFLY_ACCESS_KEY\": \"your_access_key\",\r\n        \"FIREFLY_SECRET_KEY\": \"your_secret_key\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "Connect to Firefly AI services for advanced AI-powered development assistance, code analysis, and intelligent suggestions directly in your Claude Code environment.",
      "downloads": 0
    },
    {
      "name": "grafana",
      "path": "devtools/grafana.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"grafana\": {\r\n      \"description\": \"A Model Context Protocol server for interacting with Grafana dashboards and monitoring. Supports both self-hosted Grafana instances and Grafana Cloud.\",\r\n      \"command\": \"mcp-grafana\",\r\n      \"args\": [],\r\n      \"env\": {\r\n        \"GRAFANA_URL\": \"http://localhost:3000\",\r\n        \"GRAFANA_SERVICE_ACCOUNT_TOKEN\": \"<your service account token>\",\r\n        \"GRAFANA_USERNAME\": \"<your username>\",\r\n        \"GRAFANA_PASSWORD\": \"<your password>\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "A Model Context Protocol server for interacting with Grafana dashboards and monitoring. Supports both self-hosted Grafana instances and Grafana Cloud.",
      "downloads": 0
    },
    {
      "name": "huggingface",
      "path": "devtools/huggingface.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"huggingface\": {\r\n        \"description\":\"Access Hugging Face models, datasets, Spaces, papers, collections via MCP.\",\r\n        \"url\": \"https://huggingface.co/mcp\",\r\n        \"headers\": {\r\n            \"Authorization\": \"Bearer <YOUR_HF_TOKEN>\"\r\n            }\r\n        }\r\n    }\r\n}\r\n",
      "description": "Access Hugging Face models, datasets, Spaces, papers, collections via MCP.",
      "downloads": 0
    },
    {
      "name": "imagesorcery",
      "path": "devtools/imagesorcery.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n    \"mcpServers\": {\r\n        \"imagesorcery-mcp\": {\r\n            \"description\":\"An MCP server providing tools for image processing operations\",\r\n            \"command\": \"imagesorcery-mcp\",\r\n            \"transportType\": \"stdio\",\r\n            \"autoApprove\": [\"blur\", \"change_color\", \"config\", \"crop\", \"detect\", \"draw_arrows\", \"draw_circles\", \"draw_lines\", \"draw_rectangles\", \"draw_texts\", \"fill\", \"find\", \"get_metainfo\", \"ocr\", \"overlay\", \"resize\", \"rotate\"],\r\n            \"timeout\": 100\r\n        }\r\n    }\r\n}\r\n",
      "description": "An MCP server providing tools for image processing operations",
      "downloads": 0
    },
    {
      "name": "ios-simulator-mcp",
      "path": "devtools/ios-simulator-mcp.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"ios-simulator\": {\r\n      \"description\": \"Control iOS Simulator directly from Claude Code. Launch apps, take screenshots, manage device states, and streamline mobile development workflows.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"ios-simulator-mcp\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Control iOS Simulator directly from Claude Code. Launch apps, take screenshots, manage device states, and streamline mobile development workflows.",
      "downloads": 0
    },
    {
      "name": "jfrog",
      "path": "devtools/jfrog.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{  \r\n  \"mcpServers\": {  \r\n    \"jfrog\": {  \r\n      \"description\":\"JFrog MCP Server: providing your agents with direct access to JFrog Platform services.\",\r\n      \"url\":\"https://<​​JFROG_PLATFORM_URL​​>/mcp\"\r\n    }  \r\n  }  \r\n}\r\n",
      "description": "JFrog MCP Server: providing your agents with direct access to JFrog Platform services.",
      "downloads": 0
    },
    {
      "name": "just-mcp",
      "path": "devtools/just-mcp.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"just-mcp\": {\r\n      \"description\": \"Execute Just commands and task runners seamlessly from Claude Code. Manage project tasks, run build scripts, and automate development workflows with Just integration.\",\r\n      \"command\": \"/path/to/just-mcp\",\r\n      \"args\": [\"--stdio\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Execute Just commands and task runners seamlessly from Claude Code. Manage project tasks, run build scripts, and automate development workflows with Just integration.",
      "downloads": 0
    },
    {
      "name": "launchdarkly",
      "path": "devtools/launchdarkly.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"LaunchDarkly\": {\r\n      \"description\":\"Official LaunchDarkly MCP Server for feature flag management and experimentation. Enables AI agents to interact with LaunchDarkly APIs for managing feature flags, AI configs, targeting rules, and gradual rollouts across multiple environments.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\", \"--package\", \"@launchdarkly/mcp-server\", \"--\", \"mcp\", \"start\",\r\n        \"--api-key\", \"api-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Official LaunchDarkly MCP Server for feature flag management and experimentation. Enables AI agents to interact with LaunchDarkly APIs for managing feature flags, AI configs, targeting rules, and gradual rollouts across multiple environments.",
      "downloads": 0
    },
    {
      "name": "leetcode",
      "path": "devtools/leetcode.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"leetcode\": {\r\n        \"description\": \"A Model Context Protocol (MCP) server for LeetCode that enables AI assistants to access LeetCode problems, user information, and contest data.\",\r\n        \"command\": \"mcp-server-leetcode\"\r\n    }\r\n  }\r\n}\r\n",
      "description": "A Model Context Protocol (MCP) server for LeetCode that enables AI assistants to access LeetCode problems, user information, and contest data.",
      "downloads": 0
    },
    {
      "name": "logfire",
      "path": "devtools/logfire.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"logfire\": {\r\n      \"description\":\"Provides access to OpenTelemetry traces and metrics through Logfire.\",\r\n      \"command\": \"uvx\",\r\n      \"args\": [\"logfire-mcp@latest\", \"--read-token=YOUR-TOKEN\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Provides access to OpenTelemetry traces and metrics through Logfire.",
      "downloads": 0
    },
    {
      "name": "markitdown",
      "path": "devtools/markitdown.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"markitdown\": {\r\n      \"description\": \"Convert various file formats (PDF, Word, Excel, images, audio) to Markdown.\",\r\n      \"command\": \"docker\",\r\n      \"args\": [\r\n        \"run\",\r\n        \"--rm\",\r\n        \"-i\",\r\n        \"markitdown-mcp:latest\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Convert various file formats (PDF, Word, Excel, images, audio) to Markdown.",
      "downloads": 0
    },
    {
      "name": "mcp-server-atlassian-bitbucket",
      "path": "devtools/mcp-server-atlassian-bitbucket.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n\t\"mcpServers\": {\r\n\t\t\"bitbucket\": {\r\n            \"description\": \"A Node.js/TypeScript Model Context Protocol (MCP) server for Atlassian Bitbucket Cloud. Enables AI systems (e.g., LLMs like Claude or Cursor AI) to securely interact with your repositories, pull requests, workspaces, and code in real time.\",\r\n\t\t\t\"command\": \"npx\",\r\n\t\t\t\"args\": [\"-y\", \"@aashari/mcp-server-atlassian-bitbucket\"]\r\n\t\t}\r\n\t}\r\n}\r\n",
      "description": "A Node.js/TypeScript Model Context Protocol (MCP) server for Atlassian Bitbucket Cloud. Enables AI systems (e.g., LLMs like Claude or Cursor AI) to securely interact with your repositories, pull requests, workspaces, and code in real time.",
      "downloads": 0
    },
    {
      "name": "mcp-server-trello",
      "path": "devtools/mcp-server-trello.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"trello\": {\r\n      \"command\": \"pnpx\",\r\n      \"args\": [\"@delorenj/mcp-server-trello\"],\r\n      \"env\": {\r\n        \"TRELLO_API_KEY\": \"your-api-key\",\r\n        \"TRELLO_TOKEN\": \"your-token\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "",
      "downloads": 0
    },
    {
      "name": "microsoft-clarity",
      "path": "devtools/microsoft-clarity.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"@microsoft/clarity-mcp-server\": {\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"@microsoft/clarity-mcp-server\",\r\n        \"--clarity_api_token=your-api-token-here\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "",
      "downloads": 0
    },
    {
      "name": "microsoft-dev-box",
      "path": "devtools/microsoft-dev-box.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"DevBox\": {\r\n        \"description\":\"This server enables natural language interactions for developer-focused operations like managing Dev Boxes, configurations, and pools.\",\r\n        \"command\": \"npx\",\r\n        \"args\": [\"-y\", \"@microsoft/devbox-mcp@latest\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "This server enables natural language interactions for developer-focused operations like managing Dev Boxes, configurations, and pools.",
      "downloads": 0
    },
    {
      "name": "mongodb",
      "path": "devtools/mongodb.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"MongoDB\": {\r\n      \"description\":\"A Model Context Protocol server to connect to MongoDB databases and MongoDB Atlas Clusters.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"mongodb-mcp-server@latest\", \"--readOnly\"],\r\n      \"env\": {\r\n        \"MDB_MCP_CONNECTION_STRING\": \"mongodb://localhost:27017/myDatabase\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "A Model Context Protocol server to connect to MongoDB databases and MongoDB Atlas Clusters.",
      "downloads": 0
    },
    {
      "name": "postman",
      "path": "devtools/postman.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"postman-api-http-server\": {\r\n        \"description\":\"Postman's MCP server connects AI agents, assistants, and chatbots directly to your APIs on Postman. Use natural language to prompt AI to automate work across your Postman collections, environments, workspaces, and more.\",\r\n        \"type\": \"http\",\r\n        \"url\": \"https://mcp.postman.com/{minimal | mcp}\",\r\n        \"headers\": {\r\n            \"Authorization\": \"Bearer ${input:postman-api-key}\"\r\n        }\r\n    }\r\n  }\r\n}\r\n",
      "description": "Postman's MCP server connects AI agents, assistants, and chatbots directly to your APIs on Postman. Use natural language to prompt AI to automate work across your Postman collections, environments, workspaces, and more.",
      "downloads": 0
    },
    {
      "name": "pulumi",
      "path": "devtools/pulumi.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"pulumi\": {\r\n      \"description\": \"The Pulumi Model Context Protocol (MCP) server enables advanced Infrastructure as Code development capabilities for connected agents, providing tools for cloud resource discovery and management using Pulumi Cloud and the Pulumi CLI.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@pulumi/mcp-server@latest\", \"stdio\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "The Pulumi Model Context Protocol (MCP) server enables advanced Infrastructure as Code development capabilities for connected agents, providing tools for cloud resource discovery and management using Pulumi Cloud and the Pulumi CLI.",
      "downloads": 0
    },
    {
      "name": "sentry",
      "path": "devtools/sentry.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"sentry\": {\r\n      \"description\":\"This service implements the Model Context Protocol (MCP) for interacting with Sentry, focused on human-in-the-loop coding agents and developer workflows rather than general-purpose API access.\",\r\n      \"url\": \"https://mcp.sentry.dev/mcp\"\r\n    }\r\n  }\r\n}\r\n",
      "description": "This service implements the Model Context Protocol (MCP) for interacting with Sentry, focused on human-in-the-loop coding agents and developer workflows rather than general-purpose API access.",
      "downloads": 0
    },
    {
      "name": "serena",
      "path": "devtools/serena.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n    \"mcpServers\": {\r\n        \"serena\": {\r\n            \"description\": \"Semantic code retrieval & editing tools for coding agents.\",\r\n            \"command\": \"/abs/path/to/uv\",\r\n            \"args\": [\"run\", \"--directory\", \"/abs/path/to/serena\", \"serena\", \"start-mcp-server\"]\r\n        }\r\n    }\r\n}\r\n",
      "description": "Semantic code retrieval & editing tools for coding agents.",
      "downloads": 0
    },
    {
      "name": "stripe",
      "path": "devtools/stripe.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"stripe\": {\r\n      \"description\": \"Let your AI agents interact with the Stripe API by using our MCP server.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@stripe/mcp\", \"--tools=all\"],\r\n      \"env\": {\r\n        \"STRIPE_SECRET_KEY\": \"your_stripe_secret_key_here\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "Let your AI agents interact with the Stripe API by using our MCP server.",
      "downloads": 0
    },
    {
      "name": "terraform",
      "path": "devtools/terraform.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"terraform\": {\r\n      \"description\": \"The Terraform MCP Server is a Model Context Protocol (MCP) server that provides seamless integration with Terraform Registry APIs, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development.\",\r\n      \"command\": \"docker\",\r\n      \"args\": [\r\n        \"run\",\r\n        \"-i\",\r\n        \"--rm\",\r\n        \"hashicorp/terraform-mcp-server:0.2.3\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "The Terraform MCP Server is a Model Context Protocol (MCP) server that provides seamless integration with Terraform Registry APIs, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development.",
      "downloads": 0
    },
    {
      "name": "webflow",
      "path": "devtools/webflow.json",
      "category": "devtools",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"webflow\": {\r\n      \"description\":\"Enable AI agents to interact with Webflow APIs.\",\r\n      \"command\": \"npx mcp-remote https://mcp.webflow.com/sse\"\r\n    }\r\n  }\r\n}\r\n",
      "description": "Enable AI agents to interact with Webflow APIs.",
      "downloads": 0
    },
    {
      "name": "filesystem-access",
      "path": "filesystem/filesystem-access.json",
      "category": "filesystem",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"filesystem\": {\r\n      \"description\": \"Secure filesystem access for Claude Code with configurable directory permissions and file operations.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\",\r\n        \"@modelcontextprotocol/server-filesystem\",\r\n        \"/path/to/allowed/files\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Secure filesystem access for Claude Code with configurable directory permissions and file operations.",
      "downloads": 0
    },
    {
      "name": "github-integration",
      "path": "integration/github-integration.json",
      "category": "integration",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"github\": {\r\n      \"description\": \"Direct GitHub API integration for repository management, issue tracking, pull requests, and collaborative development workflows.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@modelcontextprotocol/server-github\"],\r\n      \"env\": {\r\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"<YOUR_TOKEN>\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "Direct GitHub API integration for repository management, issue tracking, pull requests, and collaborative development workflows.",
      "downloads": 0
    },
    {
      "name": "memory-integration",
      "path": "integration/memory-integration.json",
      "category": "integration",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"memory\": {\r\n      \"description\": \"Persistent memory and context management for Claude Code sessions. Store and recall information across conversations and projects.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@modelcontextprotocol/server-memory\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Persistent memory and context management for Claude Code sessions. Store and recall information across conversations and projects.",
      "downloads": 0
    },
    {
      "name": "facebook-ads-mcp-server",
      "path": "marketing/facebook-ads-mcp-server.json",
      "category": "marketing",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"fb-ads-mcp-server\": {\r\n      \"description\": \"This project provides an MCP server acting as an interface to the Meta Ads, enabling programmatic access to Meta Ads data and management features.\",\r\n      \"command\": \"python\",\r\n      \"args\": [\r\n        \"/path/to/your/fb-ads-mcp-server/server.py\",\r\n        \"--fb-token\",\r\n        \"YOUR_META_ACCESS_TOKEN\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "This project provides an MCP server acting as an interface to the Meta Ads, enabling programmatic access to Meta Ads data and management features.",
      "downloads": 0
    },
    {
      "name": "google-ads-mcp-server",
      "path": "marketing/google-ads-mcp-server.json",
      "category": "marketing",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"google-ads\": {\r\n      \"description\": \"A FastMCP-powered Model Context Protocol server for Google Ads API integration with automatic OAuth 2.0 authentication\",\r\n      \"command\": \"/full/path/to/your/project/.venv/bin/python\",\r\n      \"args\": [\r\n        \"/full/path/to/your/project/server.py\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
      "description": "A FastMCP-powered Model Context Protocol server for Google Ads API integration with automatic OAuth 2.0 authentication",
      "downloads": 0
    },
    {
      "name": "monday",
      "path": "productivity/monday.json",
      "category": "productivity",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"monday-api-mcp\": {\r\n      \"description\":\"Enable AI agents to operate reliably within real workflows. This MCP is monday.com's open framework for connecting agents into your work OS - giving them secure access to structured data, tools to take action, and the context needed to make smart decisions.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"@mondaydotcomorg/monday-api-mcp\",\r\n        \"-t\",\r\n        \"your_monday_api_token\"\r\n      ],\r\n      \"env\": {}\r\n    }\r\n  }\r\n}\r\n",
      "description": "Enable AI agents to operate reliably within real workflows. This MCP is monday.com's open framework for connecting agents into your work OS - giving them secure access to structured data, tools to take action, and the context needed to make smart decisions.",
      "downloads": 0
    },
    {
      "name": "notion",
      "path": "productivity/notion.json",
      "category": "productivity",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"notionApi\": {\r\n      \"description\": \"Official MCP server for Notion API\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@notionhq/notion-mcp-server\"],\r\n      \"env\": {\r\n        \"NOTION_TOKEN\": \"ntn_****\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "description": "Official MCP server for Notion API",
      "downloads": 0
    },
    {
      "name": "web-fetch",
      "path": "web/web-fetch.json",
      "category": "web",
      "type": "mcp",
      "content": "{\r\n  \"mcpServers\": {\r\n    \"fetch\": {\r\n      \"description\": \"Web content fetching and data extraction capabilities. Access external APIs, scrape web content, and integrate external data sources.\",\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@modelcontextprotocol/server-fetch\"]\r\n    }\r\n  }\r\n}\r\n",
      "description": "Web content fetching and data extraction capabilities. Access external APIs, scrape web content, and integrate external data sources.",
      "downloads": 0
    }
  ],
  "settings": [],
  "hooks": [],
  "sandbox": [
    {
      "name": "claude-code-sandbox",
      "path": "e2b/claude-code-sandbox.md",
      "category": "e2b",
      "type": "sandbo",
      "content": "# E2B Claude Code Sandbox\r\n\r\nExecute Claude Code in an isolated E2B cloud sandbox environment.\r\n\r\n## Description\r\n\r\nThis component sets up E2B (E2B.dev) integration to run Claude Code in a secure, isolated cloud environment. Perfect for executing code safely without affecting your local system.\r\n\r\n## Features\r\n\r\n- **Isolated Execution**: Run Claude Code in a secure cloud sandbox\r\n- **Pre-configured Environment**: Ships with Claude Code already installed\r\n- **API Integration**: Seamless connection to Anthropic's Claude API\r\n- **Safe Code Execution**: Execute prompts without local system risks\r\n- **Component Installation**: Automatically installs any components specified with CLI flags\r\n\r\n## Requirements\r\n\r\n- E2B API Key (get from https://e2b.dev/dashboard)\r\n- Anthropic API Key\r\n- Python 3.11+ (for E2B SDK)\r\n\r\n## Usage\r\n\r\n```bash\r\n# Execute a prompt in E2B sandbox (requires API keys as environment variables or CLI parameters)\r\nnpx claude-code-templates@latest --sandbox e2b --prompt \"Create a React todo app\"\r\n\r\n# Pass API keys directly as parameters\r\nnpx claude-code-templates@latest --sandbox e2b \\\r\n  --e2b-api-key your_e2b_key \\\r\n  --anthropic-api-key your_anthropic_key \\\r\n  --prompt \"Create a React todo app\"\r\n\r\n# Install components and execute in sandbox\r\nnpx claude-code-templates@latest --sandbox e2b \\\r\n  --agent frontend-developer \\\r\n  --command setup-react \\\r\n  --e2b-api-key your_e2b_key \\\r\n  --anthropic-api-key your_anthropic_key \\\r\n  --prompt \"Create a modern todo app with TypeScript\"\r\n```\r\n\r\n## Environment Setup\r\n\r\nThe component will create:\r\n- `.claude/sandbox/e2b-launcher.py` - Python script to launch E2B sandbox\r\n- `.claude/sandbox/requirements.txt` - Python dependencies  \r\n- `.claude/sandbox/.env.example` - Environment variables template\r\n\r\n## API Key Configuration\r\n\r\nYou can provide API keys in two ways:\r\n\r\n### Option 1: CLI Parameters (Recommended)\r\n```bash\r\n# Pass keys directly as command parameters\r\nnpx claude-code-templates@latest --sandbox e2b \\\r\n  --e2b-api-key your_e2b_api_key \\\r\n  --anthropic-api-key your_anthropic_api_key \\\r\n  --prompt \"Your prompt here\"\r\n```\r\n\r\n### Option 2: Environment Variables\r\nSet these environment variables in your shell or `.env` file:\r\n```bash\r\nexport E2B_API_KEY=your_e2b_api_key_here\r\nexport ANTHROPIC_API_KEY=your_anthropic_api_key_here\r\n\r\n# Or create .claude/sandbox/.env file:\r\nE2B_API_KEY=your_e2b_api_key_here\r\nANTHROPIC_API_KEY=your_anthropic_api_key_here\r\n```\r\n\r\n**Note**: CLI parameters take precedence over environment variables.\r\n\r\n## How it Works\r\n\r\n1. Creates E2B sandbox with `anthropic-claude-code` template\r\n2. Installs any specified components (agents, commands, etc.)\r\n3. Executes your prompt using Claude Code inside the sandbox\r\n4. Returns the complete output and any generated files\r\n5. Automatically cleans up the sandbox after execution\r\n\r\n## Security Benefits\r\n\r\n- **Isolation**: Code runs in a separate cloud environment\r\n- **No Local Impact**: No risk to your local system or files\r\n- **Temporary**: Sandbox is destroyed after execution\r\n- **Controlled**: Only specified components and prompts are executed\r\n\r\n## Examples\r\n\r\n```bash\r\n# Simple web app creation\r\nnpx claude-code-templates@latest --sandbox e2b --prompt \"Create an HTML page with CSS animations\"\r\n\r\n# Full stack development\r\nnpx claude-code-templates@latest --sandbox e2b --agent fullstack-developer --prompt \"Create a Node.js API with authentication\"\r\n\r\n# Data analysis\r\nnpx claude-code-templates@latest --sandbox e2b --agent data-scientist --prompt \"Analyze this CSV data and create visualizations\"\r\n```\r\n\r\n## Template Information\r\n\r\n- **Provider**: E2B (https://e2b.dev)\r\n- **Base Template**: anthropic-claude-code\r\n- **Timeout**: 5 minutes (configurable)\r\n- **Environment**: Ubuntu with Claude Code pre-installed\r\n",
      "description": "",
      "downloads": 0
    },
    {
      "name": "SANDBOX_DEBUGGING",
      "path": "e2b/SANDBOX_DEBUGGING.md",
      "category": "e2b",
      "type": "sandbo",
      "content": "# E2B Sandbox Debugging Guide\r\n\r\n## 🔍 Herramientas de Monitoreo Disponibles\r\n\r\n### 1. Launcher Principal con Logging Mejorado\r\n**Archivo**: `e2b-launcher.py`\r\n- Logging detallado de cada paso\r\n- Verificación de instalación de Claude Code\r\n- Monitoreo de permisos y ambiente\r\n- Timeouts extendidos para operaciones largas\r\n- Descarga automática de archivos generados\r\n\r\n### 2. Monitor de Sandbox en Tiempo Real\r\n**Archivo**: `e2b-monitor.py`  \r\n- Monitoreo de recursos del sistema\r\n- Tracking de file system en tiempo real\r\n- Análisis de performance y memory usage\r\n- Logging con timestamps detallados\r\n\r\n### 3. Simulador Demo\r\nPara testing sin API keys válidos, crea un archivo demo que simule el flujo completo.\r\n\r\n## 🚨 Troubleshooting Común\r\n\r\n### Problema: \"Sandbox timeout\"\r\n**Síntomas**:\r\n```\r\n❌ Error: The sandbox was not found: This error is likely due to sandbox timeout\r\n```\r\n\r\n**Soluciones**:\r\n1. **Aumentar timeout del sandbox**:\r\n   ```python\r\n   sbx = Sandbox.create(timeout=600)  # 10 minutos\r\n   sbx.set_timeout(900)  # Extender a 15 minutos\r\n   ```\r\n\r\n2. **Usar el monitor para ver qué consume tiempo**:\r\n   ```bash\r\n   python e2b-monitor.py \"Your prompt here\" \"\" your_e2b_key your_anthropic_key\r\n   ```\r\n\r\n### Problema: \"Claude not found\"\r\n**Síntomas**:\r\n```\r\n❌ Claude not found, checking PATH...\r\n```\r\n\r\n**Debugging Steps**:\r\n1. **Verificar template correcto**:\r\n   ```python\r\n   template=\"anthropic-claude-code\"  # Debe ser exactamente este\r\n   ```\r\n\r\n2. **Verificar instalación en sandbox**:\r\n   ```bash\r\n   # El launcher ejecuta automáticamente:\r\n   which claude\r\n   claude --version\r\n   echo $PATH\r\n   ```\r\n\r\n### Problema: \"Permission denied\"\r\n**Síntomas**:\r\n```\r\n❌ Write permission issue\r\n```\r\n\r\n**Soluciones**:\r\n1. **Verificar directorio de trabajo**:\r\n   ```bash\r\n   pwd\r\n   whoami\r\n   ls -la\r\n   ```\r\n\r\n2. **Cambiar a directorio con permisos**:\r\n   ```python\r\n   sbx.commands.run(\"cd /home/user && mkdir workspace && cd workspace\")\r\n   ```\r\n\r\n### Problema: API Key Issues\r\n**Síntomas**:\r\n```\r\n❌ Error: 401: Invalid API key\r\n```\r\n\r\n**Debugging**:\r\n1. **Verificar formato de API key**:\r\n   - E2B keys: formato específico de E2B\r\n   - Anthropic keys: empiezan con \"sk-ant-\"\r\n\r\n2. **Verificar permisos**:\r\n   - Verificar que la key tenga permisos de sandbox\r\n   - Verificar quota/límites de la cuenta\r\n\r\n## 📊 Usando el Monitor para Debugging\r\n\r\n### Comando Básico:\r\n```bash\r\npython e2b-monitor.py \"Create a React app\" \"\" your_e2b_key your_anthropic_key\r\n```\r\n\r\n### Output del Monitor:\r\n```\r\n[14:32:15] INFO: 🚀 Starting enhanced E2B sandbox with monitoring\r\n[14:32:16] INFO: ✅ Sandbox created: abc123xyz\r\n[14:32:17] INFO: 🔍 System resources check\r\n[14:32:17] INFO: Memory usage:\r\n[14:32:17] INFO:                total        used        free\r\n[14:32:17] INFO:   Mem:           2.0Gi       512Mi       1.5Gi\r\n[14:32:18] INFO: 📁 Initial file system state\r\n[14:32:18] INFO: Current directory: /home/user\r\n[14:32:19] INFO: 🤖 Executing Claude Code with monitoring\r\n[14:32:19] INFO: Starting monitored execution: echo 'Create a React app'...\r\n[14:32:22] INFO: Command completed in 3.45 seconds\r\n[14:32:22] INFO: Exit code: 0\r\n[14:32:22] INFO: STDOUT length: 2847 characters\r\n```\r\n\r\n## 🎯 Casos de Uso Específicos\r\n\r\n### 1. **Debugging Timeouts**\r\n```bash\r\n# Usar el monitor para ver exactamente dónde se cuelga\r\npython e2b-monitor.py \"Complex prompt that times out\"\r\n```\r\n\r\n### 2. **Verificar Generación de Archivos**\r\nEl launcher automáticamente descarga archivos generados:\r\n```\r\n💾 DOWNLOADING FILES TO LOCAL MACHINE:\r\n✅ Downloaded: ./index.html → ./e2b-output/index.html\r\n✅ Downloaded: ./styles.css → ./e2b-output/styles.css\r\n\r\n📁 All files downloaded to: /path/to/project/e2b-output\r\n```\r\n\r\n### 3. **Monitoreo de Performance**\r\n```\r\n[14:33:20] INFO: Top processes:\r\n[14:33:20] INFO:   USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\r\n[14:33:20] INFO:   user      1234  5.2  2.1  98765 43210 pts/0    S+   14:32   0:01 claude\r\n```\r\n\r\n## 🛠 Configuración Avanzada\r\n\r\n### Variables de Ambiente Útiles:\r\n```bash\r\nexport E2B_DEBUG=1                    # Debug mode\r\nexport ANTHROPIC_API_KEY=your_key     # Claude API key  \r\nexport E2B_API_KEY=your_key          # E2B API key\r\n```\r\n\r\n### Configuración de Timeout Personalizada:\r\n```python\r\n# Para operaciones muy largas (ej: compilación completa)\r\nsbx = Sandbox.create(timeout=1800)  # 30 minutos\r\nsbx.set_timeout(3600)               # 1 hora máximo\r\n```\r\n\r\n## 📋 Checklist de Debugging\r\n\r\n### Antes de Reportar un Issue:\r\n- [ ] API keys válidos y con permisos correctos\r\n- [ ] Template correcto: \"anthropic-claude-code\"\r\n- [ ] Timeout suficiente para la operación\r\n- [ ] Ejecutar con el monitor para logs detallados\r\n- [ ] Verificar que Claude Code esté instalado en sandbox\r\n- [ ] Revisar permisos de escritura en directorio\r\n- [ ] Comprobar memoria/recursos disponibles\r\n\r\n### Información a Incluir en Reports:\r\n- Output completo del launcher o monitor\r\n- Sandbox ID si está disponible\r\n- Prompt exacto que causa el problema\r\n- Componentes instalados (si aplica)\r\n- Tiempo de ejecución antes del fallo\r\n\r\n## 🚀 Funcionalidades del Sistema\r\n\r\n### Descarga Automática de Archivos\r\nEl launcher descarga automáticamente todos los archivos generados:\r\n- HTML, CSS, JS, TS, TSX, Python, JSON, Markdown\r\n- Se guardan en directorio local `./e2b-output/`\r\n- Excluye archivos internos de Claude Code\r\n- Preserva nombres de archivo originales\r\n\r\n### Logging Detallado\r\n- Verificación de instalación de Claude Code\r\n- Monitoreo de permisos y ambiente del sandbox\r\n- Tracking de exit codes y output length\r\n- Timestamps para análisis de performance\r\n\r\n### Timeouts Inteligentes\r\n- 10 minutos timeout inicial para creación\r\n- 15 minutos total extendido automáticamente\r\n- 5 minutos timeout para ejecución de Claude Code\r\n- Timeouts cortos para verificaciones (5-10 segundos)\r\n\r\n---\r\n\r\n**Con estas herramientas puedes monitorear exactamente qué está pasando dentro del sandbox E2B y debuggear cualquier problema que surja.**\r\n",
      "description": "",
      "downloads": 0
    }
  ],
  "templates": [
    {
      "name": "angular-app",
      "id": "angular-app",
      "type": "template",
      "subtype": "framework",
      "category": "frameworks",
      "language": "javascript-typescript",
      "description": "Angular-app with Javascript-typescript",
      "files": [],
      "installCommand": "npx claude-code-templates@latest --template=angular-app --yes",
      "downloads": 0
    },
    {
      "name": "common",
      "id": "common",
      "type": "template",
      "subtype": "language",
      "category": "languages",
      "description": "Common project template",
      "files": [
        ".claude/commands/git-workflow.md",
        ".claude/commands/project-setup.md",
        ".mcp.json",
        "CLAUDE.md",
        "README.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=common --yes",
      "downloads": 0
    },
    {
      "name": "django-app",
      "id": "django-app",
      "type": "template",
      "subtype": "framework",
      "category": "frameworks",
      "language": "python",
      "description": "Django-app with Python",
      "files": [
        "CLAUDE.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=django-app --yes",
      "downloads": 0
    },
    {
      "name": "fastapi-app",
      "id": "fastapi-app",
      "type": "template",
      "subtype": "framework",
      "category": "frameworks",
      "language": "python",
      "description": "Fastapi-app with Python",
      "files": [
        "CLAUDE.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=fastapi-app --yes",
      "downloads": 0
    },
    {
      "name": "flask-app",
      "id": "flask-app",
      "type": "template",
      "subtype": "framework",
      "category": "frameworks",
      "language": "python",
      "description": "Flask-app with Python",
      "files": [
        "CLAUDE.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=flask-app --yes",
      "downloads": 0
    },
    {
      "name": "go",
      "id": "go",
      "type": "template",
      "subtype": "language",
      "category": "languages",
      "description": "Go project template",
      "files": [
        ".mcp.json",
        "README.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=go --yes",
      "downloads": 0
    },
    {
      "name": "javascript-typescript",
      "id": "javascript-typescript",
      "type": "template",
      "subtype": "language",
      "category": "languages",
      "description": "Javascript-typescript project template",
      "files": [
        ".claude/commands/api-endpoint.md",
        ".claude/commands/debug.md",
        ".claude/commands/lint.md",
        ".claude/commands/npm-scripts.md",
        ".claude/commands/refactor.md",
        ".claude/commands/test.md",
        ".claude/commands/typescript-migrate.md",
        ".claude/settings.json",
        ".mcp.json",
        "CLAUDE.md",
        "README.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=javascript-typescript --yes",
      "downloads": 0
    },
    {
      "name": "node-api",
      "id": "node-api",
      "type": "template",
      "subtype": "framework",
      "category": "frameworks",
      "language": "javascript-typescript",
      "description": "Node-api with Javascript-typescript",
      "files": [
        "CLAUDE.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=node-api --yes",
      "downloads": 0
    },
    {
      "name": "python",
      "id": "python",
      "type": "template",
      "subtype": "language",
      "category": "languages",
      "description": "Python project template",
      "files": [
        ".claude/commands/lint.md",
        ".claude/commands/test.md",
        ".claude/settings.json",
        ".mcp.json",
        "CLAUDE.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=python --yes",
      "downloads": 0
    },
    {
      "name": "rails-app",
      "id": "rails-app",
      "type": "template",
      "subtype": "framework",
      "category": "frameworks",
      "language": "ruby",
      "description": "Rails-app with Ruby",
      "files": [
        "CLAUDE.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=rails-app --yes",
      "downloads": 0
    },
    {
      "name": "react-app",
      "id": "react-app",
      "type": "template",
      "subtype": "framework",
      "category": "frameworks",
      "language": "javascript-typescript",
      "description": "React-app with Javascript-typescript",
      "files": [
        "CLAUDE.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=react-app --yes",
      "downloads": 0
    },
    {
      "name": "ruby",
      "id": "ruby",
      "type": "template",
      "subtype": "language",
      "category": "languages",
      "description": "Ruby project template",
      "files": [
        ".claude/commands/model.md",
        ".claude/commands/test.md",
        ".claude/settings.json",
        ".mcp.json",
        "CLAUDE.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=ruby --yes",
      "downloads": 0
    },
    {
      "name": "rust",
      "id": "rust",
      "type": "template",
      "subtype": "language",
      "category": "languages",
      "description": "Rust project template",
      "files": [
        ".mcp.json",
        "README.md"
      ],
      "installCommand": "npx claude-code-templates@latest --template=rust --yes",
      "downloads": 0
    },
    {
      "name": "vue-app",
      "id": "vue-app",
      "type": "template",
      "subtype": "framework",
      "category": "frameworks",
      "language": "javascript-typescript",
      "description": "Vue-app with Javascript-typescript",
      "files": [],
      "installCommand": "npx claude-code-templates@latest --template=vue-app --yes",
      "downloads": 0
    }
  ],
  "plugins": []
}